{
  "Comment": "A description of my state machine",
  "StartAt": "Validate account data",
  "States": {
    "Validate account data": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Account valid?"
    },
    "Account valid?": {
      "Type": "Choice",
      "Choices": [
        {
          "Next": "Paralelo"
        }
      ],
      "Default": "DynamoDB PutItem"
    },
    "Paralelo": {
      "Type": "Parallel",
      "End": true,
      "Branches": [
        {
          "StartAt": "ECS RunTask",
          "States": {
            "ECS RunTask": {
              "Type": "Task",
              "Resource": "arn:aws:states:::ecs:runTask",
              "Arguments": {
                "LaunchType": "FARGATE",
                "Cluster": "arn:aws:ecs:REGION:ACCOUNT_ID:cluster/MyECSCluster",
                "TaskDefinition": "arn:aws:ecs:REGION:ACCOUNT_ID:task-definition/MyTaskDefinition:1"
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "ECS RunTask (1)",
          "States": {
            "ECS RunTask (1)": {
              "Type": "Task",
              "Resource": "arn:aws:states:::ecs:runTask",
              "Arguments": {
                "LaunchType": "FARGATE",
                "Cluster": "arn:aws:ecs:REGION:ACCOUNT_ID:cluster/MyECSCluster",
                "TaskDefinition": "arn:aws:ecs:REGION:ACCOUNT_ID:task-definition/MyTaskDefinition:1"
              },
              "End": true
            }
          }
        }
      ]
    },
    "DynamoDB PutItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Arguments": {
        "TableName": "MyDynamoDBTable",
        "Item": {
          "Column": {
            "S": "MyEntry"
          }
        }
      },
      "Next": "SNS Publish"
    },
    "SNS Publish": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Arguments": {
        "Message": "{% $states.input %}"
      },
      "End": true
    }
  },
  "QueryLanguage": "JSONata"
}